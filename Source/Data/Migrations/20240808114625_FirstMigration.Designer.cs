// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240808114625_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Items.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TodoItems", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("TodoItemsHistory");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2250),
                            IsCompleted = false,
                            Title = "Todo Item 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2790),
                            IsCompleted = false,
                            Title = "Todo Item 2",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2800),
                            IsCompleted = false,
                            Title = "Todo Item 3",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2810),
                            IsCompleted = false,
                            Title = "Todo Item 4",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2830),
                            IsCompleted = false,
                            Title = "Todo Item 5",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2850),
                            IsCompleted = false,
                            Title = "Todo Item 6",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2870),
                            IsCompleted = false,
                            Title = "Todo Item 7",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2880),
                            IsCompleted = false,
                            Title = "Todo Item 8",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2890),
                            IsCompleted = false,
                            Title = "Todo Item 9",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2910),
                            IsCompleted = false,
                            Title = "Todo Item 10",
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2920),
                            IsCompleted = false,
                            Title = "Todo Item 11",
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2930),
                            IsCompleted = false,
                            Title = "Todo Item 12",
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2940),
                            IsCompleted = false,
                            Title = "Todo Item 13",
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(4360),
                            IsCompleted = false,
                            Title = "Todo Item 14",
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(4480),
                            IsCompleted = false,
                            Title = "Todo Item 15",
                            UserId = 15
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(4490),
                            IsCompleted = false,
                            Title = "Todo Item 16",
                            UserId = 16
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(4510),
                            IsCompleted = false,
                            Title = "Todo Item 17",
                            UserId = 17
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(4530),
                            IsCompleted = false,
                            Title = "Todo Item 18",
                            UserId = 18
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(4540),
                            IsCompleted = false,
                            Title = "Todo Item 19",
                            UserId = 19
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(4560),
                            IsCompleted = false,
                            Title = "Todo Item 20",
                            UserId = 20
                        });
                });

            modelBuilder.Entity("Models.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int>("PermitLimit")
                        .HasColumnType("int");

                    b.Property<int>("RateLimitWindowInMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("UsersHistory");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 275, DateTimeKind.Utc).AddTicks(8520),
                            Email = "user1@example.com",
                            Password = "yM73XTC9Aueeab8c5Q2Q8BdpCmJXAVb5YSO1YUQce28=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "gDZR/l3tBjr1hMMrhS2rpQ==",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 318, DateTimeKind.Utc).AddTicks(2790),
                            Email = "user2@example.com",
                            Password = "ltTO+9uq3rikCkXPjoZJXHi0ip8ImA+5OCjqQN4KZGc=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "RzFEpwkSnPMpprD/ldz7+w==",
                            Username = "user2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 360, DateTimeKind.Utc).AddTicks(1550),
                            Email = "user3@example.com",
                            Password = "DXcqW/G2JPokyCzONpupdJ3PD2xbwwsz4R5Sre1yzaU=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "whJhS8Hp73Qk7VMLvHd8xA==",
                            Username = "user3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 401, DateTimeKind.Utc).AddTicks(9990),
                            Email = "user4@example.com",
                            Password = "LbQ6b4HJWFNzjjkdJgLlxqV3sNbBQCNqiQEIu3esk4E=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "8diNID+TnUUhjTYLTuVaxw==",
                            Username = "user4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 445, DateTimeKind.Utc).AddTicks(7030),
                            Email = "user5@example.com",
                            Password = "2h02WzhAwPpQojKM/GULPkbwqDzeaALVmmWgiXX3xpo=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "yr2FvBWe/rwIIQZhqRS56w==",
                            Username = "user5"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 489, DateTimeKind.Utc).AddTicks(7890),
                            Email = "user6@example.com",
                            Password = "u1Hceq5EPlczMytHjTA+mmgAdm3TeN2oOTVuStX00JA=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "Xj75TdHp3mv6T8pS+sBDMw==",
                            Username = "user6"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 533, DateTimeKind.Utc).AddTicks(6030),
                            Email = "user7@example.com",
                            Password = "LK8sCbGyTleo9kOAeFfAWGNbyri0zvtmXQgiCQGwlZA=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "fEt6eVwGopDGBr7IBCeBAQ==",
                            Username = "user7"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 577, DateTimeKind.Utc).AddTicks(1440),
                            Email = "user8@example.com",
                            Password = "3KqZ6IGQ3qGQA61TgCyB6OZWyXdIQcvaOM9FOiv5LNU=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "dwig6k7mcHuxlmc0IZ95ZA==",
                            Username = "user8"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 620, DateTimeKind.Utc).AddTicks(7730),
                            Email = "user9@example.com",
                            Password = "XITNUs5q9AE5KuhOdxiqKTpJSJdu23+yTtypPaDa9N0=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "l8zKTYBF93SYlAZW/ATIQQ==",
                            Username = "user9"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 663, DateTimeKind.Utc).AddTicks(7540),
                            Email = "user10@example.com",
                            Password = "982q+cA7b/0L0uyPFEbUvftzHrglCznxexNhjPwJkYE=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "mPq8qn7GE/dIO+kfJy4EkA==",
                            Username = "user10"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 706, DateTimeKind.Utc).AddTicks(7470),
                            Email = "user11@example.com",
                            Password = "4wDBEmX+uqH24ZijkF96xUPoZugvtygegYhOnGSmw0g=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "/U2dpDh2HyBOUS0zZNrbHQ==",
                            Username = "user11"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 749, DateTimeKind.Utc).AddTicks(3720),
                            Email = "user12@example.com",
                            Password = "zOu15eTQLTLpKUWbZDjRNGZ/XrzvMaBNEtutDhEJy78=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "R0j49bRMeE7g3X0kTi0ciQ==",
                            Username = "user12"
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 791, DateTimeKind.Utc).AddTicks(3060),
                            Email = "user13@example.com",
                            Password = "19gTrr/MUGVJhZfUe40NHn/5gbayChI304wQWLgDekI=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "cvKQZkCGzhFUSHZhNwCtBw==",
                            Username = "user13"
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 837, DateTimeKind.Utc).AddTicks(7470),
                            Email = "user14@example.com",
                            Password = "klGIZsLPZtYK689VTnpboniwHMZ1C7YRwSt0+DQI5/8=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "o4VZLxbajcBRiAi123b7HA==",
                            Username = "user14"
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 886, DateTimeKind.Utc).AddTicks(1730),
                            Email = "user15@example.com",
                            Password = "sSM+VE18GCFIQqw7RVUe4cy0c+NG94/Gi9RGLivjx+k=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "t2ebZanczGztO7GCdJIGng==",
                            Username = "user15"
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 24, 931, DateTimeKind.Utc).AddTicks(9830),
                            Email = "user16@example.com",
                            Password = "CJBPyiDl6UBYXRwv0VjLFbtEeQEUdXbI/V84XGQanfU=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "yEni/XQR5a5/tkNh9wWyuw==",
                            Username = "user16"
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 1, DateTimeKind.Utc).AddTicks(8070),
                            Email = "user17@example.com",
                            Password = "WHy2ObSa78RCnjZ1n4lW7NjbtzLpYEuGwnk+k/x3UpY=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "U1KIcTg0/2gqYY/vioJd4A==",
                            Username = "user17"
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 49, DateTimeKind.Utc).AddTicks(4100),
                            Email = "user18@example.com",
                            Password = "FjhZ5tMuSgGo3P1dVlAzunyDcAZVk61VxfS485QzLfA=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "TVMLLQKI3uDk6Ocg5BmL2w==",
                            Username = "user18"
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 93, DateTimeKind.Utc).AddTicks(4690),
                            Email = "user19@example.com",
                            Password = "PxjXXSVum+Jc8Cm/XW7WN4pERMK3aeQ0HfseE+/sOJk=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "UoIrvMHdT2Bljr3fFK7Qxg==",
                            Username = "user19"
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2024, 8, 8, 11, 46, 25, 139, DateTimeKind.Utc).AddTicks(2180),
                            Email = "user20@example.com",
                            Password = "s5wK7ZGK8ou1fHcrxjKTxZXdnjj9j/5nMRGqq7aVHjk=",
                            PermitLimit = 60,
                            RateLimitWindowInMinutes = 5,
                            Salt = "8rkbxZ3SP7L70axJ/7l+2g==",
                            Username = "user20"
                        });
                });

            modelBuilder.Entity("Models.Items.TodoItem", b =>
                {
                    b.HasOne("Models.Users.User", "User")
                        .WithMany("Todos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Users.User", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
